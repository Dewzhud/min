local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
getgenv().SecureMode = true
local Window = Rayfield:CreateWindow({
    Name = "Zol Client V1.1",
    LoadingTitle = "Client",
    LoadingSubtitle = "by P zol",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })



 local Tab = Window:CreateTab("Client", 4483362458) -- Title, Image
 local Section = Tab:CreateSection("Our Client Function")
 _G.DeathDR = false
function DeathDR()
     while true do
         if not _G.DeathDR then -- ถ้าสถานะเป็น false, break loop
             break
         end
         local player = game.Players.LocalPlayer
local lastDeathPosition

-- ตรวจสอบว่าผู้เล่นใช้แพลตฟอร์มที่รองรับ Touch Input หรือไม่
local isTouchDevice = game:GetService("UserInputService").TouchEnabled

-- ฟังก์ชันที่จะทำงานเมื่อผู้เล่นทักทายหรือไม่
local function onRespawnAction(triggered)
    if triggered and lastDeathPosition then
        wait(0.5) -- รอที่ตัวละครจะ Spawn ก่อน
        player.Character.HumanoidRootPart.CFrame = CFrame.new(lastDeathPosition) -- ย้ายผู้เล่นไปยังตำแหน่งที่ตายล่าสุด
    end
end

player.CharacterAdded:Connect(function(character)
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        lastDeathPosition = character.HumanoidRootPart.Position
    end)
end)

-- เพิ่ม ContextActionService สำหรับเวอร์ชัน Touch เพื่อให้ผู้เล่นสามารถทำการ Respond ได้
if isTouchDevice then
    local CAS = game:GetService("ContextActionService")
    CAS:BindAction("Respawn", onRespawnAction, false, Enum.UserInputType.Touch)
end
         wait(0.6) -- ควรใส่ระยะเวลาที่จะหยุดการทำงานระหว่างรอบ
     end
 end
 
 local Toggle = Tab:CreateToggle({
     Name = "Death DR",
     CurrentValue = _G.DeathDR,
     Flag = "Deathdirect",
     Callback = function(Value)
         _G.DeathDR = Value
         if _G.DeathDR then -- ถ้าสถานะเป็น true, เริ่ม coroutine
             coroutine.wrap(DeathDR)()
         end
     end,
 })
