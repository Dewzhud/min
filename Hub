

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "üîÆZol Client", HidePremium = false, SaveConfig = true, ConfigFolder = "SSSak"})

local Tab = Window:MakeTab({
	Name = "üìúClient",
	Icon = "",
	PremiumOnly = false
})
local Section = Tab:AddSection({
	Name = "Our Client function"
})

Tab:AddToggle({
    Name = "üï∑Spider",
    Default = false,
    Callback = function(Value)
        _G.toggleSpider(Value) -- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô toggle ‡πÉ‡∏ô callback
    end    
})

local toggleEnabled = false

_G.toggle = function()
    toggleEnabled = not toggleEnabled
    print("Toggle " .. (toggleEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"))

    if not toggleEnabled then
        -- ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î toggle
        OrionLib:MakeNotification({
            Name = "Toggle",
            Content = "Client Off",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
        return -- ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡πÉ‡∏ä‡πâ break ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏•‡∏π‡∏õ
    end

    OrionLib:MakeNotification({
        Name = "Toggle",
        Content = "Client On",
        Image = "rbxassetid://4483345998",
        Time = 3
    })
    

end

game:GetService("RunService").Stepped:Connect(function()
    if toggleEnabled then
        -- ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ô loop ‡πÄ‡∏°‡∏∑‡πà‡∏≠ toggle ‡πÄ‡∏õ‡∏¥‡∏î
        print("(Loop ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)")
    else
        -- ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ô loop ‡πÄ‡∏°‡∏∑‡πà‡∏≠ toggle ‡∏õ‡∏¥‡∏î
        print("(Loop ‡∏´‡∏¢‡∏∏‡∏î)")
        return -- ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡πÉ‡∏ä‡πâ break ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏•‡∏π‡∏õ
    end
end)
--////////////////////////////////////////////////////////////////////////////////////////////////[]
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local noClipEnabled = false

_G.toggleNoClip = function()
    noClipEnabled = not noClipEnabled

    local notificationContent = noClipEnabled and "NoClip On" or "NoClip Off"
    OrionLib:MakeNotification({
        Name = "Noclip",
        Content = notificationContent,
        Image = "rbxassetid://4483345998",
        Time = 3
    })

    if not noClipEnabled then
        -- ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î NoClip
        return
    end
end

game:GetService("RunService").Stepped:Connect(function()
    if noClipEnabled then
        -- ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô NoClip ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î
        for _, descendant in pairs(character:GetDescendants()) do
            if descendant:IsA("BasePart") then
                descendant.CanCollide = false
            end
        end
    end

    -- ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ô loop ‡∏ó‡∏∏‡∏Å‡∏£‡∏≠‡∏ö
    print("(Loop ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)")
end)
--////////////////////////////////////////////////////////////////////////////////////////////////[]
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local spiderEnabled = false

_G.toggleSpider = function()
    spiderEnabled = not spiderEnabled

    local notificationContent = spiderEnabled and "Spider On" or "Spider Off"
    OrionLib:MakeNotification({
        Name = "Spider",
        Content = notificationContent,
        Image = "rbxassetid://4483345998",
        Time = 3
    })

    if not spiderEnabled then
        -- ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î Spider
        return
    end
end

game:GetService("RunService").Stepped:Connect(function()
    if spiderEnabled then
        -- ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô Spider ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        local rootPart = character:FindFirstChild("HumanoidRootPart")

        if humanoid and rootPart then
            local direction = Vector3.new(0, 0, 1) -- ‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏µ‡∏ô (‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤)
            local rotation = humanoid:GetAppliedRotation()

            direction = rotation:PointToWorldSpace(direction)
            local newPosition = rootPart.Position + direction * 4 -- ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ö‡∏Å‡∏≥‡πÅ‡∏û‡∏á

            rootPart.CFrame = CFrame.new(newPosition, newPosition + direction)
        end
    end

    -- ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ô loop ‡∏ó‡∏∏‡∏Å‡∏£‡∏≠‡∏ö
    print("(Loop ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)")
end)
