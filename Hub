--///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
_G.DeathDr = false
function DeathDr()
    while true do
        if not _G.DeathDr then -- ถ้าสถานะเป็น false, break loop
            break
        end
        
-- สร้างตัวแปรเพื่อเก็บจุดตายล่าสุด
local lastDeathPosition = nil

-- ค้นหาผู้เล่นในเกม
local player = game.Players.LocalPlayer

-- ตรวจสอบการเปลี่ยนแปลงของสถานะ (สถานะ = 15 คือตาย)
player.Character.Humanoid.StateChanged:Connect(function(oldState, newState)
    if newState == Enum.HumanoidStateType.Dead then
        -- เมื่อตาย บันทึกจุดตายล่าสุด
        lastDeathPosition = player.Character.HumanoidRootPart.CFrame
    end
end)

-- ตรวจสอบการเกิดใหม่
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        -- หากมีจุดตายล่าสุด ให้เกิดที่จุดนั้น
        if lastDeathPosition then
            character:WaitForChild("HumanoidRootPart").CFrame = lastDeathPosition
        end
    end)
end)
        -- จุดที่คุณต้องการเพิ่มการทำงานลงไป
        -- ...
        
        wait() -- ควรใส่ระยะเวลาที่จะหยุดการทำงานระหว่างรอบ
    end
end
--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Zol Client", HidePremium = false, SaveConfig = true, ConfigFolder = "SSSak"})

local Tab = Window:MakeTab({
	Name = "Client",
	Icon = "",
	PremiumOnly = false
})
local Section = Tab:AddSection({
	Name = "Our Client function"
})

Tab:AddToggle({
	Name = "Death direct",
	Default = false,
	Callback = function(Value)
              _G.DeathDr = Value
        if _G.DeathDr then -- ถ้าสถานะเป็น true, เริ่ม coroutine
            coroutine.wrap(DeathDr)()
        end
	end    
})
