local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
getgenv().SecureMode = true
local Window = Rayfield:CreateWindow({
    Name = "Zol Client V1.1",
    LoadingTitle = "Client",
    LoadingSubtitle = "by P zol",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local Tab = Window:CreateTab("Client", 4483362458) -- Title, Image
 local Section = Tab:CreateSection("Our Client Function")
 local Button = Tab:CreateButton({
    Name = "inf jump (on/off)",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local heatSeekingEnabled = false
        local walkWaitTime = 0.8 -- ระยะเวลาที่ต้องรอหากผู้เล่นเดิน
        local rushDuration = 3 -- ระยะเวลาสำหรับพุ่งไปข้างหน้า
        local rushSpeed = 50 -- ความเร็วในการพุ่ง
        
        local function startHeatSeeking()
            local character = player.Character
            local humanoid = character and character:FindFirstChild("Humanoid")
            local rootPart = character and character:FindFirstChild("HumanoidRootPart")
            
            if humanoid and rootPart then
                local prevState = humanoid:GetState()
                
                while heatSeekingEnabled do
                    local currentState = humanoid:GetState()
                    
                    -- ตรวจสอบว่าผู้เล่นเดินหรือไม่
                    if currentState == Enum.HumanoidStateType.Running and prevState ~= Enum.HumanoidStateType.Running then
                        wait(walkWaitTime)
                        local startTime = tick()
                        local direction = humanoid.MoveDirection
                        
                        -- พุ่งเข้าหน้าตามทิศทางการเคลื่อนที่ของผู้เล่น
                        while tick() - startTime < rushDuration do
                            rootPart.Velocity = direction * rushSpeed
                            wait()
                        end
                        
                        -- หยุดการพุ่ง
                        rootPart.Velocity = Vector3.new(0, 0, 0)
                    end
                    
                    prevState = currentState
                    wait()
                end
            end
        end
        
        function _G.toggleHeatSeeking()
            heatSeekingEnabled = not heatSeekingEnabled
            
            if heatSeekingEnabled then
                startHeatSeeking()
            end
        end
    end,
 })


